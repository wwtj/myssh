<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- 启用注解扫描 -->
	<context:annotation-config />


	<!-- 配置一个testService对象 -->
	<bean id="testService" class="com.mlf.test.TestService">
		<property name="name" value="test"></property>
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/myssh" />
		<property name="username" value="root" />
		<property name="password" value="111qqq" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="3" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />
	</bean>

	<!-- 配置会话工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 接管了hibernate的对象映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/mlf/domain/User.hbm.xml</value>
				<value>com/mlf/domain/Identity.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=false
			</value>
		</property>
	</bean>

	<!-- 配置UserService对象 -->
	<!-- <bean id="userServiceImpl" class="com.mlf.service.impl.UserServiceImpl"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->
	<!-- 配置UserService对象 ,通过注解的方式来注入属性值 -->
	<bean id="userServiceImpl" class="com.mlf.service.impl.UserServiceImpl" />
	<bean id="identityServiceImpl" class="com.mlf.service.impl.IdentityServiceImpl" />



	<!-- 配置action 此处的bean要写请求的路径，跟struts-config最初配action时候的路径一样 -->
	<!-- scope="prototype" 来一个请求分配一个action -->
	<!-- <bean name="/login" scope="prototype" class="com.mlf.web.action.LoginAction">
		<property name="userService" ref="userServiceImpl"></property>
	</bean> -->
	<bean name="/login" scope="prototype" class="com.mlf.web.action.LoginAction"/>

	<!-- 配置事务管理器，统一管理sessionFactory的事务 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 启用事务注解 -->
	<tx:annotation-driven transaction-manager="txManager" />




</beans>